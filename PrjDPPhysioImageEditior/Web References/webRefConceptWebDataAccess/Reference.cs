//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace PrjDPPhysioImageEditior.webRefConceptWebDataAccess {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ConceptWebDataAccessSoap", Namespace="https://conceptsoft.co.uk/ConceptWebDataAccess")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(Task))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class ConceptWebDataAccess : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetHL7SettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadPatListForORMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadPatListForORUOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabPatListForORMOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabPatListForADT01OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabPatListForADT08OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLabPatListForMergeADT39OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRadPatListForMergeADT39OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHL7StatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatLabORMDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveHL7SettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHL7StatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ConfirmOrderCancellationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateHL7StatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLabTestStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateLabTestResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateRadiologyResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetClientMachineListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMachineConfigOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatOrderListXT1800OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveMachineResultDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIntegrationConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIntReqListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateIntReqResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAnnotationTempletBase64OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPatAnnonationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdatePatAnnonationDataOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ConceptWebDataAccess(string hostingURL) {
            this.Url = hostingURL; // global::PrjDPPhysioImageEditior.Properties.Settings.Default.PrjDPPhysioImageEditior_webRefConceptWebDataAccess_ConceptWebDataAccess;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetHL7SettingCompletedEventHandler GetHL7SettingCompleted;
        
        /// <remarks/>
        public event GetRadPatListForORMCompletedEventHandler GetRadPatListForORMCompleted;
        
        /// <remarks/>
        public event GetRadPatListForORUCompletedEventHandler GetRadPatListForORUCompleted;
        
        /// <remarks/>
        public event GetLabPatListForORMCompletedEventHandler GetLabPatListForORMCompleted;
        
        /// <remarks/>
        public event GetLabPatListForADT01CompletedEventHandler GetLabPatListForADT01Completed;
        
        /// <remarks/>
        public event GetLabPatListForADT08CompletedEventHandler GetLabPatListForADT08Completed;
        
        /// <remarks/>
        public event GetLabPatListForMergeADT39CompletedEventHandler GetLabPatListForMergeADT39Completed;
        
        /// <remarks/>
        public event GetRadPatListForMergeADT39CompletedEventHandler GetRadPatListForMergeADT39Completed;
        
        /// <remarks/>
        public event GetHL7StatisticsCompletedEventHandler GetHL7StatisticsCompleted;
        
        /// <remarks/>
        public event GetPatLabORMDetailsCompletedEventHandler GetPatLabORMDetailsCompleted;
        
        /// <remarks/>
        public event SaveHL7SettingCompletedEventHandler SaveHL7SettingCompleted;
        
        /// <remarks/>
        public event UpdateHL7StatusCompletedEventHandler UpdateHL7StatusCompleted;
        
        /// <remarks/>
        public event ConfirmOrderCancellationCompletedEventHandler ConfirmOrderCancellationCompleted;
        
        /// <remarks/>
        public event UpdateHL7StatisticsCompletedEventHandler UpdateHL7StatisticsCompleted;
        
        /// <remarks/>
        public event UpdateLabTestStatusCompletedEventHandler UpdateLabTestStatusCompleted;
        
        /// <remarks/>
        public event UpdateLabTestResultCompletedEventHandler UpdateLabTestResultCompleted;
        
        /// <remarks/>
        public event UpdateRadiologyResultCompletedEventHandler UpdateRadiologyResultCompleted;
        
        /// <remarks/>
        public event GetClientMachineListCompletedEventHandler GetClientMachineListCompleted;
        
        /// <remarks/>
        public event GetMachineConfigCompletedEventHandler GetMachineConfigCompleted;
        
        /// <remarks/>
        public event GetPatOrderListXT1800CompletedEventHandler GetPatOrderListXT1800Completed;
        
        /// <remarks/>
        public event SaveMachineResultDataCompletedEventHandler SaveMachineResultDataCompleted;
        
        /// <remarks/>
        public event GetIntegrationConfigurationCompletedEventHandler GetIntegrationConfigurationCompleted;
        
        /// <remarks/>
        public event GetIntReqListCompletedEventHandler GetIntReqListCompleted;
        
        /// <remarks/>
        public event UpdateIntReqResponseCompletedEventHandler UpdateIntReqResponseCompleted;
        
        /// <remarks/>
        public event GetAnnotationTempletBase64CompletedEventHandler GetAnnotationTempletBase64Completed;
        
        /// <remarks/>
        public event GetPatAnnonationDetailsCompletedEventHandler GetPatAnnonationDetailsCompleted;
        
        /// <remarks/>
        public event UpdatePatAnnonationDataCompletedEventHandler UpdatePatAnnonationDataCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetHL7Setting", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHL7Setting(string wstrPrefMethod, string wstrHL7Type, string wstrHL7Ver, int _wlabType) {
            object[] results = this.Invoke("GetHL7Setting", new object[] {
                        wstrPrefMethod,
                        wstrHL7Type,
                        wstrHL7Ver,
                        _wlabType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHL7SettingAsync(string wstrPrefMethod, string wstrHL7Type, string wstrHL7Ver, int _wlabType) {
            this.GetHL7SettingAsync(wstrPrefMethod, wstrHL7Type, wstrHL7Ver, _wlabType, null);
        }
        
        /// <remarks/>
        public void GetHL7SettingAsync(string wstrPrefMethod, string wstrHL7Type, string wstrHL7Ver, int _wlabType, object userState) {
            if ((this.GetHL7SettingOperationCompleted == null)) {
                this.GetHL7SettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHL7SettingOperationCompleted);
            }
            this.InvokeAsync("GetHL7Setting", new object[] {
                        wstrPrefMethod,
                        wstrHL7Type,
                        wstrHL7Ver,
                        _wlabType}, this.GetHL7SettingOperationCompleted, userState);
        }
        
        private void OnGetHL7SettingOperationCompleted(object arg) {
            if ((this.GetHL7SettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHL7SettingCompleted(this, new GetHL7SettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetRadPatListForORM", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRadPatListForORM() {
            object[] results = this.Invoke("GetRadPatListForORM", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadPatListForORMAsync() {
            this.GetRadPatListForORMAsync(null);
        }
        
        /// <remarks/>
        public void GetRadPatListForORMAsync(object userState) {
            if ((this.GetRadPatListForORMOperationCompleted == null)) {
                this.GetRadPatListForORMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadPatListForORMOperationCompleted);
            }
            this.InvokeAsync("GetRadPatListForORM", new object[0], this.GetRadPatListForORMOperationCompleted, userState);
        }
        
        private void OnGetRadPatListForORMOperationCompleted(object arg) {
            if ((this.GetRadPatListForORMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadPatListForORMCompleted(this, new GetRadPatListForORMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetRadPatListForORU", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRadPatListForORU() {
            object[] results = this.Invoke("GetRadPatListForORU", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadPatListForORUAsync() {
            this.GetRadPatListForORUAsync(null);
        }
        
        /// <remarks/>
        public void GetRadPatListForORUAsync(object userState) {
            if ((this.GetRadPatListForORUOperationCompleted == null)) {
                this.GetRadPatListForORUOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadPatListForORUOperationCompleted);
            }
            this.InvokeAsync("GetRadPatListForORU", new object[0], this.GetRadPatListForORUOperationCompleted, userState);
        }
        
        private void OnGetRadPatListForORUOperationCompleted(object arg) {
            if ((this.GetRadPatListForORUCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadPatListForORUCompleted(this, new GetRadPatListForORUCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetLabPatListForORM", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabPatListForORM() {
            object[] results = this.Invoke("GetLabPatListForORM", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabPatListForORMAsync() {
            this.GetLabPatListForORMAsync(null);
        }
        
        /// <remarks/>
        public void GetLabPatListForORMAsync(object userState) {
            if ((this.GetLabPatListForORMOperationCompleted == null)) {
                this.GetLabPatListForORMOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabPatListForORMOperationCompleted);
            }
            this.InvokeAsync("GetLabPatListForORM", new object[0], this.GetLabPatListForORMOperationCompleted, userState);
        }
        
        private void OnGetLabPatListForORMOperationCompleted(object arg) {
            if ((this.GetLabPatListForORMCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabPatListForORMCompleted(this, new GetLabPatListForORMCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetLabPatListForADT01", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabPatListForADT01() {
            object[] results = this.Invoke("GetLabPatListForADT01", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabPatListForADT01Async() {
            this.GetLabPatListForADT01Async(null);
        }
        
        /// <remarks/>
        public void GetLabPatListForADT01Async(object userState) {
            if ((this.GetLabPatListForADT01OperationCompleted == null)) {
                this.GetLabPatListForADT01OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabPatListForADT01OperationCompleted);
            }
            this.InvokeAsync("GetLabPatListForADT01", new object[0], this.GetLabPatListForADT01OperationCompleted, userState);
        }
        
        private void OnGetLabPatListForADT01OperationCompleted(object arg) {
            if ((this.GetLabPatListForADT01Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabPatListForADT01Completed(this, new GetLabPatListForADT01CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetLabPatListForADT08", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabPatListForADT08() {
            object[] results = this.Invoke("GetLabPatListForADT08", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabPatListForADT08Async() {
            this.GetLabPatListForADT08Async(null);
        }
        
        /// <remarks/>
        public void GetLabPatListForADT08Async(object userState) {
            if ((this.GetLabPatListForADT08OperationCompleted == null)) {
                this.GetLabPatListForADT08OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabPatListForADT08OperationCompleted);
            }
            this.InvokeAsync("GetLabPatListForADT08", new object[0], this.GetLabPatListForADT08OperationCompleted, userState);
        }
        
        private void OnGetLabPatListForADT08OperationCompleted(object arg) {
            if ((this.GetLabPatListForADT08Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabPatListForADT08Completed(this, new GetLabPatListForADT08CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetLabPatListForMergeADT39", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLabPatListForMergeADT39() {
            object[] results = this.Invoke("GetLabPatListForMergeADT39", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLabPatListForMergeADT39Async() {
            this.GetLabPatListForMergeADT39Async(null);
        }
        
        /// <remarks/>
        public void GetLabPatListForMergeADT39Async(object userState) {
            if ((this.GetLabPatListForMergeADT39OperationCompleted == null)) {
                this.GetLabPatListForMergeADT39OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLabPatListForMergeADT39OperationCompleted);
            }
            this.InvokeAsync("GetLabPatListForMergeADT39", new object[0], this.GetLabPatListForMergeADT39OperationCompleted, userState);
        }
        
        private void OnGetLabPatListForMergeADT39OperationCompleted(object arg) {
            if ((this.GetLabPatListForMergeADT39Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLabPatListForMergeADT39Completed(this, new GetLabPatListForMergeADT39CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetRadPatListForMergeADT39", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRadPatListForMergeADT39() {
            object[] results = this.Invoke("GetRadPatListForMergeADT39", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRadPatListForMergeADT39Async() {
            this.GetRadPatListForMergeADT39Async(null);
        }
        
        /// <remarks/>
        public void GetRadPatListForMergeADT39Async(object userState) {
            if ((this.GetRadPatListForMergeADT39OperationCompleted == null)) {
                this.GetRadPatListForMergeADT39OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRadPatListForMergeADT39OperationCompleted);
            }
            this.InvokeAsync("GetRadPatListForMergeADT39", new object[0], this.GetRadPatListForMergeADT39OperationCompleted, userState);
        }
        
        private void OnGetRadPatListForMergeADT39OperationCompleted(object arg) {
            if ((this.GetRadPatListForMergeADT39Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRadPatListForMergeADT39Completed(this, new GetRadPatListForMergeADT39CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetHL7Statistics", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHL7Statistics(string in_whl7type) {
            object[] results = this.Invoke("GetHL7Statistics", new object[] {
                        in_whl7type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHL7StatisticsAsync(string in_whl7type) {
            this.GetHL7StatisticsAsync(in_whl7type, null);
        }
        
        /// <remarks/>
        public void GetHL7StatisticsAsync(string in_whl7type, object userState) {
            if ((this.GetHL7StatisticsOperationCompleted == null)) {
                this.GetHL7StatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHL7StatisticsOperationCompleted);
            }
            this.InvokeAsync("GetHL7Statistics", new object[] {
                        in_whl7type}, this.GetHL7StatisticsOperationCompleted, userState);
        }
        
        private void OnGetHL7StatisticsOperationCompleted(object arg) {
            if ((this.GetHL7StatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHL7StatisticsCompleted(this, new GetHL7StatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetPatLabORMDetails", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatLabORMDetails(long _wPatVisitID) {
            object[] results = this.Invoke("GetPatLabORMDetails", new object[] {
                        _wPatVisitID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatLabORMDetailsAsync(long _wPatVisitID) {
            this.GetPatLabORMDetailsAsync(_wPatVisitID, null);
        }
        
        /// <remarks/>
        public void GetPatLabORMDetailsAsync(long _wPatVisitID, object userState) {
            if ((this.GetPatLabORMDetailsOperationCompleted == null)) {
                this.GetPatLabORMDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatLabORMDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPatLabORMDetails", new object[] {
                        _wPatVisitID}, this.GetPatLabORMDetailsOperationCompleted, userState);
        }
        
        private void OnGetPatLabORMDetailsOperationCompleted(object arg) {
            if ((this.GetPatLabORMDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatLabORMDetailsCompleted(this, new GetPatLabORMDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/SaveHL7Setting", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveHL7Setting(object[] wobjParamArray) {
            object[] results = this.Invoke("SaveHL7Setting", new object[] {
                        wobjParamArray});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveHL7SettingAsync(object[] wobjParamArray) {
            this.SaveHL7SettingAsync(wobjParamArray, null);
        }
        
        /// <remarks/>
        public void SaveHL7SettingAsync(object[] wobjParamArray, object userState) {
            if ((this.SaveHL7SettingOperationCompleted == null)) {
                this.SaveHL7SettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveHL7SettingOperationCompleted);
            }
            this.InvokeAsync("SaveHL7Setting", new object[] {
                        wobjParamArray}, this.SaveHL7SettingOperationCompleted, userState);
        }
        
        private void OnSaveHL7SettingOperationCompleted(object arg) {
            if ((this.SaveHL7SettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveHL7SettingCompleted(this, new SaveHL7SettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateHL7Status", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateHL7Status(long _wreqNo, long _wTestCode, string _wMsgID, int _wstatus, int _wtype) {
            object[] results = this.Invoke("UpdateHL7Status", new object[] {
                        _wreqNo,
                        _wTestCode,
                        _wMsgID,
                        _wstatus,
                        _wtype});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHL7StatusAsync(long _wreqNo, long _wTestCode, string _wMsgID, int _wstatus, int _wtype) {
            this.UpdateHL7StatusAsync(_wreqNo, _wTestCode, _wMsgID, _wstatus, _wtype, null);
        }
        
        /// <remarks/>
        public void UpdateHL7StatusAsync(long _wreqNo, long _wTestCode, string _wMsgID, int _wstatus, int _wtype, object userState) {
            if ((this.UpdateHL7StatusOperationCompleted == null)) {
                this.UpdateHL7StatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHL7StatusOperationCompleted);
            }
            this.InvokeAsync("UpdateHL7Status", new object[] {
                        _wreqNo,
                        _wTestCode,
                        _wMsgID,
                        _wstatus,
                        _wtype}, this.UpdateHL7StatusOperationCompleted, userState);
        }
        
        private void OnUpdateHL7StatusOperationCompleted(object arg) {
            if ((this.UpdateHL7StatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHL7StatusCompleted(this, new UpdateHL7StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/ConfirmOrderCancellation", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean ConfirmOrderCancellation(string _wMsgID) {
            object[] results = this.Invoke("ConfirmOrderCancellation", new object[] {
                        _wMsgID});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void ConfirmOrderCancellationAsync(string _wMsgID) {
            this.ConfirmOrderCancellationAsync(_wMsgID, null);
        }
        
        /// <remarks/>
        public void ConfirmOrderCancellationAsync(string _wMsgID, object userState) {
            if ((this.ConfirmOrderCancellationOperationCompleted == null)) {
                this.ConfirmOrderCancellationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnConfirmOrderCancellationOperationCompleted);
            }
            this.InvokeAsync("ConfirmOrderCancellation", new object[] {
                        _wMsgID}, this.ConfirmOrderCancellationOperationCompleted, userState);
        }
        
        private void OnConfirmOrderCancellationOperationCompleted(object arg) {
            if ((this.ConfirmOrderCancellationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ConfirmOrderCancellationCompleted(this, new ConfirmOrderCancellationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateHL7Statistics", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateHL7Statistics(string wpstrHL7Type, string wpstrSTATType, int _wCount) {
            object[] results = this.Invoke("UpdateHL7Statistics", new object[] {
                        wpstrHL7Type,
                        wpstrSTATType,
                        _wCount});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateHL7StatisticsAsync(string wpstrHL7Type, string wpstrSTATType, int _wCount) {
            this.UpdateHL7StatisticsAsync(wpstrHL7Type, wpstrSTATType, _wCount, null);
        }
        
        /// <remarks/>
        public void UpdateHL7StatisticsAsync(string wpstrHL7Type, string wpstrSTATType, int _wCount, object userState) {
            if ((this.UpdateHL7StatisticsOperationCompleted == null)) {
                this.UpdateHL7StatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateHL7StatisticsOperationCompleted);
            }
            this.InvokeAsync("UpdateHL7Statistics", new object[] {
                        wpstrHL7Type,
                        wpstrSTATType,
                        _wCount}, this.UpdateHL7StatisticsOperationCompleted, userState);
        }
        
        private void OnUpdateHL7StatisticsOperationCompleted(object arg) {
            if ((this.UpdateHL7StatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateHL7StatisticsCompleted(this, new UpdateHL7StatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateLabTestStatus", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean UpdateLabTestStatus(string wpstrVisitCode, string wpstrRequestID, long _wTestCode, int _wstatus, int _wuserId, string wpstrTrnsDt, int _wtype) {
            object[] results = this.Invoke("UpdateLabTestStatus", new object[] {
                        wpstrVisitCode,
                        wpstrRequestID,
                        _wTestCode,
                        _wstatus,
                        _wuserId,
                        wpstrTrnsDt,
                        _wtype});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLabTestStatusAsync(string wpstrVisitCode, string wpstrRequestID, long _wTestCode, int _wstatus, int _wuserId, string wpstrTrnsDt, int _wtype) {
            this.UpdateLabTestStatusAsync(wpstrVisitCode, wpstrRequestID, _wTestCode, _wstatus, _wuserId, wpstrTrnsDt, _wtype, null);
        }
        
        /// <remarks/>
        public void UpdateLabTestStatusAsync(string wpstrVisitCode, string wpstrRequestID, long _wTestCode, int _wstatus, int _wuserId, string wpstrTrnsDt, int _wtype, object userState) {
            if ((this.UpdateLabTestStatusOperationCompleted == null)) {
                this.UpdateLabTestStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLabTestStatusOperationCompleted);
            }
            this.InvokeAsync("UpdateLabTestStatus", new object[] {
                        wpstrVisitCode,
                        wpstrRequestID,
                        _wTestCode,
                        _wstatus,
                        _wuserId,
                        wpstrTrnsDt,
                        _wtype}, this.UpdateLabTestStatusOperationCompleted, userState);
        }
        
        private void OnUpdateLabTestStatusOperationCompleted(object arg) {
            if ((this.UpdateLabTestStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLabTestStatusCompleted(this, new UpdateLabTestStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateLabTestResult", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public TaskOfBoolean UpdateLabTestResult(string wpstrVisitCode, string wpstrRequestID, long _wTestCode, long _wParamCode, int _wuserId, string wpstrTrnsDt, string wpstrResultVal, string wpstrUnit, string wpstrParamNormal, decimal wdParamHigh, decimal wdParamLow, decimal wdParamCriHigh, decimal wdParamCriLow, string wpstrAbnormalflg, string wpstrCriAbnormalflg) {
            object[] results = this.Invoke("UpdateLabTestResult", new object[] {
                        wpstrVisitCode,
                        wpstrRequestID,
                        _wTestCode,
                        _wParamCode,
                        _wuserId,
                        wpstrTrnsDt,
                        wpstrResultVal,
                        wpstrUnit,
                        wpstrParamNormal,
                        wdParamHigh,
                        wdParamLow,
                        wdParamCriHigh,
                        wdParamCriLow,
                        wpstrAbnormalflg,
                        wpstrCriAbnormalflg});
            return ((TaskOfBoolean)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateLabTestResultAsync(string wpstrVisitCode, string wpstrRequestID, long _wTestCode, long _wParamCode, int _wuserId, string wpstrTrnsDt, string wpstrResultVal, string wpstrUnit, string wpstrParamNormal, decimal wdParamHigh, decimal wdParamLow, decimal wdParamCriHigh, decimal wdParamCriLow, string wpstrAbnormalflg, string wpstrCriAbnormalflg) {
            this.UpdateLabTestResultAsync(wpstrVisitCode, wpstrRequestID, _wTestCode, _wParamCode, _wuserId, wpstrTrnsDt, wpstrResultVal, wpstrUnit, wpstrParamNormal, wdParamHigh, wdParamLow, wdParamCriHigh, wdParamCriLow, wpstrAbnormalflg, wpstrCriAbnormalflg, null);
        }
        
        /// <remarks/>
        public void UpdateLabTestResultAsync(
                    string wpstrVisitCode, 
                    string wpstrRequestID, 
                    long _wTestCode, 
                    long _wParamCode, 
                    int _wuserId, 
                    string wpstrTrnsDt, 
                    string wpstrResultVal, 
                    string wpstrUnit, 
                    string wpstrParamNormal, 
                    decimal wdParamHigh, 
                    decimal wdParamLow, 
                    decimal wdParamCriHigh, 
                    decimal wdParamCriLow, 
                    string wpstrAbnormalflg, 
                    string wpstrCriAbnormalflg, 
                    object userState) {
            if ((this.UpdateLabTestResultOperationCompleted == null)) {
                this.UpdateLabTestResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateLabTestResultOperationCompleted);
            }
            this.InvokeAsync("UpdateLabTestResult", new object[] {
                        wpstrVisitCode,
                        wpstrRequestID,
                        _wTestCode,
                        _wParamCode,
                        _wuserId,
                        wpstrTrnsDt,
                        wpstrResultVal,
                        wpstrUnit,
                        wpstrParamNormal,
                        wdParamHigh,
                        wdParamLow,
                        wdParamCriHigh,
                        wdParamCriLow,
                        wpstrAbnormalflg,
                        wpstrCriAbnormalflg}, this.UpdateLabTestResultOperationCompleted, userState);
        }
        
        private void OnUpdateLabTestResultOperationCompleted(object arg) {
            if ((this.UpdateLabTestResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateLabTestResultCompleted(this, new UpdateLabTestResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateRadiologyResult", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateRadiologyResult(string wpstrOrderID, string wpstrJavaexeCall, string wpstrJavaWebCall, string wpstrWebLinkCall) {
            object[] results = this.Invoke("UpdateRadiologyResult", new object[] {
                        wpstrOrderID,
                        wpstrJavaexeCall,
                        wpstrJavaWebCall,
                        wpstrWebLinkCall});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateRadiologyResultAsync(string wpstrOrderID, string wpstrJavaexeCall, string wpstrJavaWebCall, string wpstrWebLinkCall) {
            this.UpdateRadiologyResultAsync(wpstrOrderID, wpstrJavaexeCall, wpstrJavaWebCall, wpstrWebLinkCall, null);
        }
        
        /// <remarks/>
        public void UpdateRadiologyResultAsync(string wpstrOrderID, string wpstrJavaexeCall, string wpstrJavaWebCall, string wpstrWebLinkCall, object userState) {
            if ((this.UpdateRadiologyResultOperationCompleted == null)) {
                this.UpdateRadiologyResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateRadiologyResultOperationCompleted);
            }
            this.InvokeAsync("UpdateRadiologyResult", new object[] {
                        wpstrOrderID,
                        wpstrJavaexeCall,
                        wpstrJavaWebCall,
                        wpstrWebLinkCall}, this.UpdateRadiologyResultOperationCompleted, userState);
        }
        
        private void OnUpdateRadiologyResultOperationCompleted(object arg) {
            if ((this.UpdateRadiologyResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateRadiologyResultCompleted(this, new UpdateRadiologyResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetClientMachineList", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetClientMachineList() {
            object[] results = this.Invoke("GetClientMachineList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetClientMachineListAsync() {
            this.GetClientMachineListAsync(null);
        }
        
        /// <remarks/>
        public void GetClientMachineListAsync(object userState) {
            if ((this.GetClientMachineListOperationCompleted == null)) {
                this.GetClientMachineListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientMachineListOperationCompleted);
            }
            this.InvokeAsync("GetClientMachineList", new object[0], this.GetClientMachineListOperationCompleted, userState);
        }
        
        private void OnGetClientMachineListOperationCompleted(object arg) {
            if ((this.GetClientMachineListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetClientMachineListCompleted(this, new GetClientMachineListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetMachineConfig", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMachineConfig(string in_wMacID) {
            object[] results = this.Invoke("GetMachineConfig", new object[] {
                        in_wMacID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMachineConfigAsync(string in_wMacID) {
            this.GetMachineConfigAsync(in_wMacID, null);
        }
        
        /// <remarks/>
        public void GetMachineConfigAsync(string in_wMacID, object userState) {
            if ((this.GetMachineConfigOperationCompleted == null)) {
                this.GetMachineConfigOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMachineConfigOperationCompleted);
            }
            this.InvokeAsync("GetMachineConfig", new object[] {
                        in_wMacID}, this.GetMachineConfigOperationCompleted, userState);
        }
        
        private void OnGetMachineConfigOperationCompleted(object arg) {
            if ((this.GetMachineConfigCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMachineConfigCompleted(this, new GetMachineConfigCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetPatOrderListXT1800", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatOrderListXT1800(string wstrSID, string wstrMID) {
            object[] results = this.Invoke("GetPatOrderListXT1800", new object[] {
                        wstrSID,
                        wstrMID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatOrderListXT1800Async(string wstrSID, string wstrMID) {
            this.GetPatOrderListXT1800Async(wstrSID, wstrMID, null);
        }
        
        /// <remarks/>
        public void GetPatOrderListXT1800Async(string wstrSID, string wstrMID, object userState) {
            if ((this.GetPatOrderListXT1800OperationCompleted == null)) {
                this.GetPatOrderListXT1800OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatOrderListXT1800OperationCompleted);
            }
            this.InvokeAsync("GetPatOrderListXT1800", new object[] {
                        wstrSID,
                        wstrMID}, this.GetPatOrderListXT1800OperationCompleted, userState);
        }
        
        private void OnGetPatOrderListXT1800OperationCompleted(object arg) {
            if ((this.GetPatOrderListXT1800Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatOrderListXT1800Completed(this, new GetPatOrderListXT1800CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/SaveMachineResultData", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SaveMachineResultData(object[] wobjParamArray) {
            object[] results = this.Invoke("SaveMachineResultData", new object[] {
                        wobjParamArray});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SaveMachineResultDataAsync(object[] wobjParamArray) {
            this.SaveMachineResultDataAsync(wobjParamArray, null);
        }
        
        /// <remarks/>
        public void SaveMachineResultDataAsync(object[] wobjParamArray, object userState) {
            if ((this.SaveMachineResultDataOperationCompleted == null)) {
                this.SaveMachineResultDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveMachineResultDataOperationCompleted);
            }
            this.InvokeAsync("SaveMachineResultData", new object[] {
                        wobjParamArray}, this.SaveMachineResultDataOperationCompleted, userState);
        }
        
        private void OnSaveMachineResultDataOperationCompleted(object arg) {
            if ((this.SaveMachineResultDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveMachineResultDataCompleted(this, new SaveMachineResultDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetIntegrationConfiguration", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIntegrationConfiguration() {
            object[] results = this.Invoke("GetIntegrationConfiguration", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIntegrationConfigurationAsync() {
            this.GetIntegrationConfigurationAsync(null);
        }
        
        /// <remarks/>
        public void GetIntegrationConfigurationAsync(object userState) {
            if ((this.GetIntegrationConfigurationOperationCompleted == null)) {
                this.GetIntegrationConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIntegrationConfigurationOperationCompleted);
            }
            this.InvokeAsync("GetIntegrationConfiguration", new object[0], this.GetIntegrationConfigurationOperationCompleted, userState);
        }
        
        private void OnGetIntegrationConfigurationOperationCompleted(object arg) {
            if ((this.GetIntegrationConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIntegrationConfigurationCompleted(this, new GetIntegrationConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetIntReqList", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetIntReqList() {
            object[] results = this.Invoke("GetIntReqList", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetIntReqListAsync() {
            this.GetIntReqListAsync(null);
        }
        
        /// <remarks/>
        public void GetIntReqListAsync(object userState) {
            if ((this.GetIntReqListOperationCompleted == null)) {
                this.GetIntReqListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIntReqListOperationCompleted);
            }
            this.InvokeAsync("GetIntReqList", new object[0], this.GetIntReqListOperationCompleted, userState);
        }
        
        private void OnGetIntReqListOperationCompleted(object arg) {
            if ((this.GetIntReqListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIntReqListCompleted(this, new GetIntReqListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdateIntReqResponse", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateIntReqResponse(long _reqID, long _reqDNo, int _rType, int _status, string strReqXML, string strRespXML, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] byteImageData) {
            object[] results = this.Invoke("UpdateIntReqResponse", new object[] {
                        _reqID,
                        _reqDNo,
                        _rType,
                        _status,
                        strReqXML,
                        strRespXML,
                        byteImageData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateIntReqResponseAsync(long _reqID, long _reqDNo, int _rType, int _status, string strReqXML, string strRespXML, byte[] byteImageData) {
            this.UpdateIntReqResponseAsync(_reqID, _reqDNo, _rType, _status, strReqXML, strRespXML, byteImageData, null);
        }
        
        /// <remarks/>
        public void UpdateIntReqResponseAsync(long _reqID, long _reqDNo, int _rType, int _status, string strReqXML, string strRespXML, byte[] byteImageData, object userState) {
            if ((this.UpdateIntReqResponseOperationCompleted == null)) {
                this.UpdateIntReqResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateIntReqResponseOperationCompleted);
            }
            this.InvokeAsync("UpdateIntReqResponse", new object[] {
                        _reqID,
                        _reqDNo,
                        _rType,
                        _status,
                        strReqXML,
                        strRespXML,
                        byteImageData}, this.UpdateIntReqResponseOperationCompleted, userState);
        }
        
        private void OnUpdateIntReqResponseOperationCompleted(object arg) {
            if ((this.UpdateIntReqResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateIntReqResponseCompleted(this, new UpdateIntReqResponseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetAnnotationTempletBase64", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAnnotationTempletBase64(string strTempID) {
            object[] results = this.Invoke("GetAnnotationTempletBase64", new object[] {
                        strTempID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAnnotationTempletBase64Async(string strTempID) {
            this.GetAnnotationTempletBase64Async(strTempID, null);
        }
        
        /// <remarks/>
        public void GetAnnotationTempletBase64Async(string strTempID, object userState) {
            if ((this.GetAnnotationTempletBase64OperationCompleted == null)) {
                this.GetAnnotationTempletBase64OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAnnotationTempletBase64OperationCompleted);
            }
            this.InvokeAsync("GetAnnotationTempletBase64", new object[] {
                        strTempID}, this.GetAnnotationTempletBase64OperationCompleted, userState);
        }
        
        private void OnGetAnnotationTempletBase64OperationCompleted(object arg) {
            if ((this.GetAnnotationTempletBase64Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAnnotationTempletBase64Completed(this, new GetAnnotationTempletBase64CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/GetPatAnnonationDetails", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPatAnnonationDetails(string strMno, string strTempletId) {
            object[] results = this.Invoke("GetPatAnnonationDetails", new object[] {
                        strMno,
                        strTempletId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPatAnnonationDetailsAsync(string strMno, string strTempletId) {
            this.GetPatAnnonationDetailsAsync(strMno, strTempletId, null);
        }
        
        /// <remarks/>
        public void GetPatAnnonationDetailsAsync(string strMno, string strTempletId, object userState) {
            if ((this.GetPatAnnonationDetailsOperationCompleted == null)) {
                this.GetPatAnnonationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPatAnnonationDetailsOperationCompleted);
            }
            this.InvokeAsync("GetPatAnnonationDetails", new object[] {
                        strMno,
                        strTempletId}, this.GetPatAnnonationDetailsOperationCompleted, userState);
        }
        
        private void OnGetPatAnnonationDetailsOperationCompleted(object arg) {
            if ((this.GetPatAnnonationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPatAnnonationDetailsCompleted(this, new GetPatAnnonationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://conceptsoft.co.uk/ConceptWebDataAccess/UpdatePatAnnonationData", RequestNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", ResponseNamespace="https://conceptsoft.co.uk/ConceptWebDataAccess", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdatePatAnnonationData(string strMno, string strTempletId, string strBase64, string strUID) {
            object[] results = this.Invoke("UpdatePatAnnonationData", new object[] {
                        strMno,
                        strTempletId,
                        strBase64,
                        strUID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void UpdatePatAnnonationDataAsync(string strMno, string strTempletId, string strBase64, string strUID) {
            this.UpdatePatAnnonationDataAsync(strMno, strTempletId, strBase64, strUID, null);
        }
        
        /// <remarks/>
        public void UpdatePatAnnonationDataAsync(string strMno, string strTempletId, string strBase64, string strUID, object userState) {
            if ((this.UpdatePatAnnonationDataOperationCompleted == null)) {
                this.UpdatePatAnnonationDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePatAnnonationDataOperationCompleted);
            }
            this.InvokeAsync("UpdatePatAnnonationData", new object[] {
                        strMno,
                        strTempletId,
                        strBase64,
                        strUID}, this.UpdatePatAnnonationDataOperationCompleted, userState);
        }
        
        private void OnUpdatePatAnnonationDataOperationCompleted(object arg) {
            if ((this.UpdatePatAnnonationDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdatePatAnnonationDataCompleted(this, new UpdatePatAnnonationDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskOfBoolean))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://conceptsoft.co.uk/ConceptWebDataAccess")]
    public partial class Task {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="https://conceptsoft.co.uk/ConceptWebDataAccess")]
    public partial class TaskOfBoolean : Task {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetHL7SettingCompletedEventHandler(object sender, GetHL7SettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHL7SettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHL7SettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRadPatListForORMCompletedEventHandler(object sender, GetRadPatListForORMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadPatListForORMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadPatListForORMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRadPatListForORUCompletedEventHandler(object sender, GetRadPatListForORUCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadPatListForORUCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadPatListForORUCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLabPatListForORMCompletedEventHandler(object sender, GetLabPatListForORMCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabPatListForORMCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabPatListForORMCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLabPatListForADT01CompletedEventHandler(object sender, GetLabPatListForADT01CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabPatListForADT01CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabPatListForADT01CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLabPatListForADT08CompletedEventHandler(object sender, GetLabPatListForADT08CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabPatListForADT08CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabPatListForADT08CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetLabPatListForMergeADT39CompletedEventHandler(object sender, GetLabPatListForMergeADT39CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLabPatListForMergeADT39CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLabPatListForMergeADT39CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetRadPatListForMergeADT39CompletedEventHandler(object sender, GetRadPatListForMergeADT39CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRadPatListForMergeADT39CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRadPatListForMergeADT39CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetHL7StatisticsCompletedEventHandler(object sender, GetHL7StatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHL7StatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHL7StatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetPatLabORMDetailsCompletedEventHandler(object sender, GetPatLabORMDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatLabORMDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatLabORMDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveHL7SettingCompletedEventHandler(object sender, SaveHL7SettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveHL7SettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveHL7SettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateHL7StatusCompletedEventHandler(object sender, UpdateHL7StatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHL7StatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHL7StatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void ConfirmOrderCancellationCompletedEventHandler(object sender, ConfirmOrderCancellationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ConfirmOrderCancellationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ConfirmOrderCancellationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateHL7StatisticsCompletedEventHandler(object sender, UpdateHL7StatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateHL7StatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateHL7StatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateLabTestStatusCompletedEventHandler(object sender, UpdateLabTestStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLabTestStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLabTestStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateLabTestResultCompletedEventHandler(object sender, UpdateLabTestResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateLabTestResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateLabTestResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TaskOfBoolean Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TaskOfBoolean)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateRadiologyResultCompletedEventHandler(object sender, UpdateRadiologyResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateRadiologyResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateRadiologyResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetClientMachineListCompletedEventHandler(object sender, GetClientMachineListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetClientMachineListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetClientMachineListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetMachineConfigCompletedEventHandler(object sender, GetMachineConfigCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMachineConfigCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMachineConfigCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetPatOrderListXT1800CompletedEventHandler(object sender, GetPatOrderListXT1800CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatOrderListXT1800CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatOrderListXT1800CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void SaveMachineResultDataCompletedEventHandler(object sender, SaveMachineResultDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveMachineResultDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveMachineResultDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetIntegrationConfigurationCompletedEventHandler(object sender, GetIntegrationConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIntegrationConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIntegrationConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetIntReqListCompletedEventHandler(object sender, GetIntReqListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIntReqListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIntReqListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdateIntReqResponseCompletedEventHandler(object sender, UpdateIntReqResponseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateIntReqResponseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateIntReqResponseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetAnnotationTempletBase64CompletedEventHandler(object sender, GetAnnotationTempletBase64CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAnnotationTempletBase64CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAnnotationTempletBase64CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void GetPatAnnonationDetailsCompletedEventHandler(object sender, GetPatAnnonationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPatAnnonationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPatAnnonationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void UpdatePatAnnonationDataCompletedEventHandler(object sender, UpdatePatAnnonationDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdatePatAnnonationDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdatePatAnnonationDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591